# require 'spec_helper'
# require "pace/instruments/base"
#
# describe Pace::Instruments::Aberration do
#   before do
#     @job = {
#       "class" => "FakeJob",
#       "args"  => ["foo", "bar"]
#     }
#   end
#
#   describe "#save" do
#     describe "with supplied data" do
#       it "sums jobs processed during observation period" do
#         instrument = Pace::Instruments::Aberration.new(
#           :observations             => [1, 2, 3],
#           :samples_per_observation  => 1
#         )
#         instrument.observations.should == [1, 2, 3]
#
#
#         # it slides window forward, using initial observation window
#         instrument.record(@job)
#         instrument.record(@job)
#         instrument.record(@job)
#         instrument.record(@job)
#         instrument.save
#         instrument.observations.should == [2, 3, 4]
#
#         # it refreshes sample counter
#         instrument.record(@job)
#         instrument.save
#         instrument.observations.should == [3, 4, 1]
#       end
#
#       it "sums jobs processed during observation periods" do
#         instrument = Pace::Instruments::Aberration.new(
#           :observations               => [1, 2, 3],
#           :intervals_per_observation  => 2
#         )
#         instrument.observations.should == [1, 2, 3]
#
#         # first sample, no save
#         instrument.record(@job)
#         instrument.record(@job)
#         instrument.save
#         instrument.observations.should == [1, 2, 3]
#
#         # second sample, save
#         instrument.record(@job)
#         instrument.record(@job)
#         instrument.save
#         instrument.observations.should == [2, 3, 4]
#       end
#     end
#
#     describe "without supplied data" do
#       it "populates observations" do
#         instrument = Pace::Instruments::Aberration.new(
#           :observations               => 3,
#           :intervals_per_observation  => 1
#         )
#         instrument.observations.should == [nil, nil, nil]
#
#         instrument.record(@job)
#         instrument.record(@job)
#         instrument.save
#         instrument.observations.should == [nil, nil, 2]
#       end
#     end
#
#     describe "with a callback" do
#       it "calls callback when not aberrant" do
#         data = (0..120).to_a
#         instrument = Pace::Instruments::Aberration.new(
#           :observations => data,
#           :period => 60,
#           :alpha => 1.0,
#           :beta => 0.0,
#           :gamma => 0.0,
#           :deviation_tolerance => 0.05,
#           :deviation_window => 5,
#           :deviation_limit => 4
#         ) do |aberrant|
#           aberrant.should be_false
#         end
#         instrument.save
#       end
#
#       it "calls callback when aberrant" do
#         data = (0..120).to_a
#         instrument = Pace::Instruments::Aberration.new(
#           :observations => data,
#           :period => 60,
#           :alpha => 1.0,
#           :beta => 0.0,
#           :gamma => 0.0,
#           :deviation_tolerance => 0.05,
#           :deviation_window => 5,
#           :deviation_limit => 1
#         ) do |aberrant|
#           aberrant.should be_true
#         end
#         instrument.save
#       end
#     end
#   end
#
#   describe "#aberrant?" do
#     before do
#       # 72 hours of messages/minute
#       @data = [826,739,793,686,770,787,792,780,688,734,724,742,737,613,665,723,693,724,757,708,639,626,669,569,613,626,727,641,664,663,731,768,612,604,617,784,722,693,767,666,711,638,638,736,626,566,703,568,713,608,598,616,593,695,572,536,592,611,596,697,610,635,587,679,558,518,696,619,715,654,709,775,655,637,647,693,670,589,823,775,788,796,757,734,655,630,624,726,675,573,704,602,740,695,620,580,764,675,714,611,683,689,569,637,653,632,639,687,691,728,678,630,691,643,612,575,608,721,608,569,602,608,613,692,605,689,589,660,631,657,742,642,608,745,721,705,617,641,608,623,731,786,766,719,739,716,571,576,576,693,570,668,638,579,630,598,706,705,809,614,681,594,552,549,679,701,737,603,679,653,685,633,526,622,723,653,669,654,671,582,639,652,629,608,576,619,729,607,582,741,687,669,717,689,627,541,665,595,729,628,610,688,708,667,735,730,625,597,697,714,830,685,825,715,648,636,655,757,729,645,753,702,709,624,704,788,741,709,737,703,605,732,691,691,653,602,654,658,624,697,633,676,620,681,734,612,651,629,565,716,607,622,650,680,661,693,674,635,550,648,707,716,759,635,628,553,603,764,654,598,599,558,447,576,614,571,569,687,781,665,627,593,637,610,736,792,652,674,670,827,740,696,638,655,631,665,680,712,668,709,658,632,624,761,720,814,803,641,699,709,623,615,560,535,599,577,581,739,577,639,655,640,584,540,594,578,668,533,630,673,629,689,566,556,582,503,567,520,599,593,522,591,591,609,497,569,617,658,641,629,605,723,561,605,533,568,517,677,539,548,518,613,488,556,628,541,665,549,588,487,472,532,494,615,649,569,619,685,569,531,533,532,369,485,478,549,493,504,501,505,525,557,521,534,489,598,559,553,585,557,559,546,606,665,527,527,547,512,497,558,568,483,577,563,508,532,646,664,554,565,570,441,409,385,516,480,461,405,439,510,424,422,454,385,438,429,456,424,436,455,486,550,449,426,492,422,427,463,473,451,523,448,436,555,492,452,444,441,368,410,331,423,449,406,410,428,373,368,391,316,376,401,436,401,332,332,357,372,416,433,375,343,368,368,378,333,379,394,333,372,338,407,310,370,319,339,305,289,293,270,261,333,314,271,281,292,323,280,316,304,306,300,282,330,297,350,342,339,332,271,300,316,361,372,288,351,357,295,388,318,272,225,246,268,290,380,290,203,270,250,299,262,239,216,272,212,267,361,277,295,300,252,236,275,212,194,208,196,205,270,249,234,225,205,229,246,208,248,251,244,253,163,150,167,210,205,191,168,196,135,175,223,142,143,184,152,176,171,169,129,166,175,139,141,152,165,183,194,193,163,176,211,160,120,167,215,217,142,116,170,180,188,192,192,135,89,116,122,131,78,181,89,78,98,91,68,107,101,127,120,114,112,127,182,126,108,119,132,105,139,118,149,75,89,102,149,147,149,142,170,143,85,88,102,70,101,78,92,108,87,75,74,79,83,57,61,77,95,86,76,67,67,54,88,79,94,132,93,67,131,123,177,107,104,77,125,100,86,80,85,97,50,71,95,66,50,104,95,106,99,120,93,70,101,131,99,117,87,74,110,73,64,68,80,83,57,65,42,79,51,37,53,88,82,92,70,104,93,64,58,48,66,64,72,71,80,44,44,49,46,60,45,49,40,45,41,53,58,44,89,52,43,51,63,71,55,64,42,31,53,44,53,44,34,72,70,75,47,42,43,53,86,24,44,35,34,49,40,41,39,49,42,28,38,37,38,45,44,54,63,56,62,79,50,59,29,32,57,72,85,74,66,54,84,92,79,65,55,37,34,60,52,37,78,58,84,76,40,46,60,60,59,28,42,23,75,64,74,45,70,53,124,98,105,84,48,54,66,62,44,48,101,93,80,68,58,80,58,53,81,90,37,35,52,46,45,71,41,74,76,71,58,36,32,40,51,51,50,56,37,19,46,53,46,29,49,53,48,41,75,47,56,65,63,40,46,48,41,58,70,71,54,43,64,75,75,91,112,101,73,53,65,98,49,69,76,69,69,81,102,81,66,78,90,84,64,104,113,78,111,52,69,86,80,65,85,69,99,83,102,94,88,37,59,74,84,65,61,110,73,69,104,75,93,100,117,87,100,121,89,95,118,126,132,127,133,108,163,97,124,154,111,112,113,132,143,128,95,105,127,125,94,137,138,178,175,143,138,206,140,151,148,147,188,173,155,132,172,192,230,207,229,186,222,224,178,200,152,176,204,198,224,231,249,219,285,197,270,273,215,252,247,194,233,219,214,208,291,253,246,255,251,236,315,221,366,212,309,256,279,269,249,338,323,291,256,378,287,389,318,307,352,369,398,354,287,389,383,274,332,334,259,289,258,360,334,294,294,355,320,390,338,258,244,281,308,320,278,287,273,296,317,357,348,376,359,368,370,309,329,297,369,487,382,404,401,451,339,372,372,386,387,329,403,394,336,405,380,392,387,542,519,603,500,615,506,465,486,333,397,415,453,440,457,486,455,468,474,497,475,387,447,470,472,415,497,473,406,328,372,463,449,484,499,503,610,559,529,543,628,554,519,573,536,564,496,372,478,419,437,516,468,407,547,506,447,603,607,562,556,586,463,453,584,517,571,600,603,565,573,671,717,529,569,582,637,592,573,620,601,708,479,655,557,572,675,706,707,677,706,725,655,590,664,692,678,617,680,535,560,675,608,563,606,614,646,679,667,568,588,524,676,668,560,527,662,650,593,598,568,634,631,626,597,652,715,711,624,571,538,640,622,630,730,745,719,711,609,575,630,604,591,455,575,530,613,511,633,564,585,591,625,674,698,718,712,624,569,583,519,567,625,618,649,614,675,583,640,674,611,613,549,667,566,636,525,565,530,497,477,606,585,558,582,533,525,607,570,567,601,645,629,714,715,561,664,599,535,514,598,597,554,590,583,466,504,488,420,456,493,487,550,523,568,521,512,469,441,456,545,542,531,472,380,581,551,517,467,563,586,557,525,534,555,574,552,627,571,615,616,744,699,694,656,671,657,629,679,598,547,565,541,435,588,470,573,532,560,450,468,497,454,522,551,560,436,577,503,512,402,609,522,503,568,513,567,564,571,472,494,627,584,510,538,486,570,569,526,525,583,609,563,487,604,569,604,616,543,483,515,622,507,498,493,453,598,543,548,557,532,477,433,505,353,462,574,533,603,584,581,602,541,529,585,550,494,585,585,471,524,545,519,601,600,563,507,423,508,577,534,619,455,494,562,476,502,498,559,486,513,564,626,522,584,453,425,611,703,592,550,623,494,499,449,473,472,581,557,523,591,659,591,495,572,614,508,544,553,446,506,473,453,424,403,557,476,435,456,451,478,418,525,529,452,323,438,562,488,419,528,478,485,543,500,389,500,428,472,470,515,410,466,381,429,457,440,429,417,480,504,453,451,486,421,542,483,459,554,558,482,469,577,539,586,630,474,448,576,695,649,598,526,617,563,596,650,560,530,479,596,517,500,530,537,510,506,605,537,463,466,394,465,435,443,457,521,508,572,492,475,432,526,497,490,563,552,485,639,630,579,592,517,532,499,622,642,637,648,684,593,446,448,520,383,391,425,464,426,473,451,592,519,459,501,484,554,576,518,518,464,571,412,567,539,551,556,579,630,598,454,589,557,567,479,505,568,489,345,418,473,427,456,435,416,572,536,397,410,489,429,401,507,523,474,509,466,534,490,426,427,477,498,456,515,437,439,377,481,444,497,446,473,510,499,441,479,469,559,520,532,527,455,476,518,544,483,436,468,566,597,536,438,588,588,590,553,582,633,524,497,568,558,601,567,530,476,530,471,441,558,491,558,445,485,422,580,598,601,604,584,550,535,568,567,594,514,576,537,531,600,576,532,581,574,530,535,607,504,669,603,557,484,447,610,494,480,470,530,509,526,458,526,531,503,600,571,559,482,511,502,470,536,593,596,455,495,429,435,471,523,451,405,453,436,443,625,605,583,515,550,553,540,658,534,474,455,499,481,523,412,442,484,502,480,427,419,428,404,398,535,489,495,563,493,402,486,507,444,532,502,421,460,456,484,416,469,607,475,375,387,468,430,395,363,405,424,384,446,433,548,459,460,437,400,457,435,529,477,459,400,469,428,464,481,469,460,438,491,489,547,431,446,454,554,376,399,426,450,456,457,483,482,502,386,356,500,388,440,441,382,495,396,313,496,561,467,444,530,426,469,465,382,392,343,414,357,423,448,376,372,316,343,374,398,500,471,379,301,366,487,407,433,406,389,458,356,416,499,399,419,410,411,417,412,394,365,442,317,403,435,385,404,334,374,437,383,423,375,312,349,326,388,252,306,298,373,350,369,337,293,263,371,360,404,337,305,329,262,292,336,376,330,362,340,368,320,391,298,218,241,235,231,212,159,263,235,299,215,223,305,315,317,337,310,335,278,289,230,325,331,295,218,283,222,231,293,263,236,219,250,238,241,204,266,217,217,234,278,268,265,294,226,317,232,248,268,189,320,207,162,189,249,172,162,196,161,145,151,257,248,205,222,178,203,162,172,168,267,223,147,147,182,200,279,241,165,175,184,188,137,158,121,169,160,121,119,180,167,175,135,156,172,186,129,189,186,202,113,158,132,156,186,166,128,150,121,152,153,147,104,107,94,107,100,134,119,136,162,190,146,90,102,127,76,72,126,104,124,169,147,167,140,73,124,112,65,90,76,43,138,89,149,128,85,84,68,90,87,90,129,133,151,135,171,178,170,153,117,95,84,92,67,63,45,91,118,107,126,114,137,64,113,101,87,63,67,55,63,118,79,62,87,55,58,68,62,74,55,78,87,67,82,101,117,98,89,81,87,65,102,67,41,108,80,74,96,69,79,68,68,49,42,38,113,68,86,67,56,58,58,41,64,86,39,33,12,45,40,27,43,70,68,51,75,57,66,82,65,49,51,34,55,55,71,83,54,68,37,36,72,110,70,43,32,29,80,45,36,18,37,26,58,39,24,27,44,41,66,63,55,85,64,53,53,71,39,68,83,47,24,33,42,45,54,55,42,66,68,41,40,78,63,63,81,92,51,71,47,46,40,53,32,33,47,31,16,10,40,48,31,43,37,36,57,43,34,48,25,19,27,46,51,37,49,43,49,41,42,47,35,65,70,53,36,36,26,31,34,38,47,58,54,69,45,68,35,27,43,35,34,30,41,32,48,38,49,34,46,58,24,28,23,31,28,24,22,48,81,25,63,50,63,92,66,44,41,34,46,50,54,54,39,30,26,60,56,60,55,71,61,42,31,34,41,77,45,43,48,60,54,48,66,76,48,62,42,52,85,106,124,75,52,41,63,30,79,88,74,64,71,82,46,34,44,74,51,46,115,94,71,46,61,36,76,58,72,62,68,63,81,90,80,66,64,77,71,71,93,142,100,115,83,74,72,82,95,74,97,51,77,82,95,68,87,76,96,108,105,99,91,123,109,135,117,148,80,123,85,117,112,108,103,73,101,100,107,100,114,136,97,77,114,110,134,112,135,98,109,113,142,129,146,166,181,136,134,173,207,183,187,184,165,162,168,181,198,162,198,155,165,215,202,238,200,172,199,214,226,206,158,236,229,174,196,174,184,201,194,201,243,212,290,238,233,269,254,251,339,219,258,225,318,350,246,229,288,288,278,297,228,277,238,265,268,256,214,208,199,251,222,277,277,323,259,266,289,238,251,221,290,265,261,334,263,316,330,290,366,414,296,420,474,418,360,307,263,416,414,445,379,496,569,219,304,273,255,337,284,354,331,342,330,416,362,404,317,378,344,365,397,351,262,371,348,372,388,335,370,384,446,389,357,373,422,422,471,439,342,376,419,484,420,399,319,441,405,364,360,389,457,402,411,490,387,363,404,459,513,413,529,497,425,456,399,470,451,453,457,500,401,425,375,488,379,460,471,444,490,501,481,493,533,478,529,502,498,554,540,486,531,538,443,457,477,445,526,389,463,572,470,520,486,506,455,375,464,417,443,435,463,508,479,442,525,538,523,456,525,533,544,474,566,544,573,474,659,614,514,493,556,458,550,530,446,479,551,559,574,483,521,489,553,517,606,527,519,493,605,489,562,541,614,594,466,468,570,597,588,486,491,474,553,451,493,527,540,644,493,473,562,505,561,496,551,581,630,648,608,679,626,590,629,568,573,460,470,476,569,554,491,547,529,631,589,589,454,516,551,478,552,562,523,464,422,464,418,495,464,449,463,487,477,446,510,462,506,497,466,557,523,483,570,595,516,517,554,508,591,463,549,590,643,621,530,561,486,468,506,569,501,588,575,566,512,645,538,539,375,463,550,479,580,482,572,623,509,685,667,648,554,582,564,548,500,493,563,546,556,559,536,481,490,526,417,578,424,489,527,592,457,591,488,500,539,469,535,536,427,534,564,485,525,561,606,598,582,519,565,522,407,566,544,529,387,504,492,448,490,535,583,488,460,538,491,505,459,455,480,405,466,470,421,446,517,507,470,455,418,445,458,587,507,478,418,458,499,419,454,501,547,566,511,427,490,490,447,521,532,484,507,514,543,465,452,467,440,477,446,442,453,445,538,421,469,410,486,481,499,466,440,478,527,452,525,471,500,529,530,495,519,472,504,521,584,446,529,468,457,444,577,523,565,577,444,468,400,529,538,560,492,454,547,610,589,553,505,515,444,382,459,480,536,424,507,525,449,540,452,529,409,379,375,471,503,491,428,355,504,477,470,466,380,398,600,479,486,435,525,487,493,372,493,531,506,424,568,422,458,405,478,423,468,410,335,416,454,421,439,445,433,407,413,407,406,408,453,489,424,412,376,359,390,360,376,357,372,323,424,378,391,415,374,352,446,377,482,388,443,436,422,452,407,389,391,369,371,378,358,329,353,398,323,380,345,376,372,442,411,430,459,366,389,449,392,388,495,390,416,471,418,437,486,418,437,421,525,406,388,426,418,399,498,484,483,498,420,455,463,445,451,402,382,387,469,476,526,508,474,482,493,537,507,418,512,513,485,467,401,403,448,452,440,452,428,464,493,521,505,481,450,531,513,599,454,445,474,420,489,490,502,484,495,464,480,413,507,428,482,387,447,457,484,435,471,483,499,524,493,487,588,530,499,544,505,477,519,520,513,525,441,511,462,568,586,658,536,516,601,509,614,643,693,708,598,731,744,641,713,670,638,588,672,519,525,618,508,524,529,437,504,567,599,441,457,413,467,488,432,480,352,465,451,422,458,465,487,498,450,504,407,435,481,427,496,435,551,521,534,442,531,550,511,397,503,449,443,465,450,574,512,487,535,552,447,487,519,515,483,528,570,524,514,473,427,377,435,445,436,476,519,535,496,443,488,491,525,561,579,451,399,479,456,561,505,509,421,472,534,412,385,386,404,438,398,412,503,350,345,349,328,444,389,345,278,398,394,404,429,364,504,427,491,413,399,430,424,380,360,336,357,435,357,315,329,343,354,260,296,299,291,351,309,359,325,289,361,401,393,399,355,454,392,406,425,370,355,276,347,353,348,393,259,339,424,403,231,264,291,324,232,296,269,285,293,313,383,271,311,287,278,214,282,215,263,279,243,224,202,230,249,208,265,247,249,325,253,293,258,299,246,250,264,258,202,206,150,179,184,232,177,149,225,213,266,235,203,219,215,208,159,199,162,138,178,219,179,159,153,179,143,192,179,177,112,160,153,150,143,137,215,155,111,142,120,131,173,159,123,146,94,160,189,204,168,146,136,162,117,112,97,146,122,125,107,77,85,116,97,95,55,94,118,126,102,102,142,146,134,108,86,164,74,117,50,101,82,95,88,85,57,84,54,72,122,78,69,73,84,59,53,70,51,76,68,73,59,83,79,59,80,83,53,51,128,59,80,73,110,73,94,90,48,55,57,108,34,56,54,106,55,39,41,38,58,60,34,69,42,35,35,51,44,40,41,37,65,42,70,57,54,57,46,47,55,51,41,21,25,37,36,57,61,75,50,41,101,77,65,72,76,81,65,85,62,56,64,49,50,69,49,36,33,89,44,39,72,98,47,62,97,67,69,65,32,51,34,39,28,33,41,51,61,75,68,14,53,17,56,39,29,59,64,15,35,17,17,41,58,49,46,75,56,28,43,46,72,57,32,30,71,64,27,18,24,16,58,22,16,18,21,36,55,40,60,51,34,56,37,21,45,35,29,43,47,18,52,20,54,28,32,45,31,32,41,26,19,15,31,17,21,28,34,43,25,10,26,32,26,28,29,48,66,25,51,30,52,58,37,52,50,89,50,35,60,45,44,21,56,71,50,56,84,38,37,57,66,43,49,68,49,35,27,41,59,36,34,33,33,37,28,46,52,47,24,36,53,33,42,22,20,46,36,37,15,37,55,36,22,54,53,82,68,34,40,32,26,23,38,30,46,41,22,38,36,36,37,37,30,27,19,84,45,38,52,46,44,57,55,33,58,62,75,47,58,32,27,29,49,54,66,56,76,53,87,44,53,70,89,40,56,103,61,62,82,43,54,20,41,59,54,70,59,31,63,75,83,95,77,68,87,62,113,91,68,78,160,152,103,135,191,224,191,220,170,174,150,103,130,133,137,151,163,164,149,162,148,197,170,106,95,120,135,163,173,146,133,160,166,115,145,123,199,181,147,145,110,95,108,118,123,129,167,131,200,123,84,143,177,160,158,211,261,231,190,163,176,162,199,190,246,221,237,249,238,274,185,198,233,247,194,194,191,214,222,230,268,264,227,234,196,206,229,247,217,248,198,245,273,265,263,281,260,328,239,260,243,256,277,241,235,261,395,304,302,254,273,317,245,265,274,247,234,333,320,291,294,344,359,376,290,337,324,340,427,382,299,292,469,321,359,261,364,334,284,280,260,292,283,295,319,421,347,279,361,352,306,340,359,376,331,370,307,366,386,399,393,381,392,380,411,430,409,366,374,400,344,330,359,298,332,289,327,419,363,339,321,337,325,384,355,400,404,401,375,449,363,361,381,424,369,384,413,426,475,438,476,429,510,371,549,422,437,420,466,402,420,414,478,457,439,582,359,655,407,410,410,485,532,536,514,472,512,559,527,522,558,583,503,530,504,464,453,478,476,527,467,456,445,430,496,461,493,461,383,464,626,446,505,565,504,533,548,541,500,520,468,621,593,543,538,554,499,438,397,474,473,473,477,576,495,515,542,517,465,541,622,466,555,539,426,487,616,464,557,512,554,515,564,520,627,640,660,685,619,643,495,510,495,599,458,541,548,595,510,523,407,418,552,363,495,391,468,366,459,508,446,542,513,556,529,649,539,514,507,562,455,550,448,492,511,426,441,506,583,473,463,466,484,591,542,583,498,536,567,553,575,533,476,594,545,525,536,654,630,499,599,648,525,511,557,484,526,529,554,595,557,562,598,638,545,493,553,510,562,613,621,537,629,587,503,490,512,545,505,485,462,441,441,457,520,641,499,620,670,560,563,577,566,575,692,558,507,572,518,666,690,669,611,685,589,529,568,583,628,594,681,584,624,555,514,540,525,533,579,546,578,556,740,589,525,679,598,649,634,615,572,648,610,617,615,626,610,474,591,543,666,682,579,607,541,576,634,649,587,544,565,571,593,522,505,652,757,629,607,664,598,643,591,565,587,612,569,615,572,676,517,759,658,550,625,643,512,607,631,607,609,541,669,698,601,583,580,566,628,450,556,541,520,515,575,657,539,558,583,630,628,599,550,566,522,500,563,604,629,575,703,631,712,629,584,565,526,594,615,576,566,572,669,657,146]
#     end
#
#     it "returns false when observed value is within forecast tolerance" do
#       instrument = Pace::Instruments::Aberration.new(:observations => @data)
#       instrument.should_not be_aberrant
#     end
#
#     it "returns false if aberation is not within error window" do
#       @data[-10] = 1000
#       instrument = Pace::Instruments::Aberration.new(:observations => @data)
#       instrument.should_not be_aberrant
#     end
#
#     it "returns true when observed value is higher than deviation tolerance" do
#       @data[-3] = 1000
#       instrument = Pace::Instruments::Aberration.new(:observations => @data)
#       instrument.should be_aberrant
#     end
#
#     it "returns true when observed value is lower than deviation tolerance" do
#       @data[-3] = 0
#       instrument = Pace::Instruments::Aberration.new(:observations => @data)
#       instrument.should be_aberrant
#     end
#   end
#
#   describe "forecast_ready?" do
#     it "returns false any observations are nil" do
#       instrument = Pace::Instruments::Aberration.new(:observations => 2)
#       instrument.should_not be_forecast_ready
#     end
#
#     it "returns false if number of observations are less than 2 * period" do
#       instrument = Pace::Instruments::Aberration.new(:observations => [1, 2, 3], :period => 10)
#       instrument.should_not be_forecast_ready
#     end
#
#     it "returns true if observations are supplied" do
#       instrument = Pace::Instruments::Aberration.new(:observations => [1, 2, 3], :period => 1)
#       instrument.should be_forecast_ready
#     end
#   end
# end
